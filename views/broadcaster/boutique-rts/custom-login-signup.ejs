<!DOCTYPE html>
<html>
<head>
    <%- include ../../layout/default/head %>

    <!-- google authentication API -->
    <script src="https://apis.google.com/js/api:client.js"></script>

    <script>
        // Load Facebook SDK asynchronously
        (function(d, s, id){
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/fr_CH/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));

        window.fbAsyncInit = function() {
            FB.init({
//                appId : '199799350126485',
                appId : <%- config.identity_providers.facebook.client_id %>,
                version: 'v2.5',
                xfbml: true
            });
        };
    </script>
</head>
<body>

<main>

    <div class="container">

        <div id="rts-custom-login">

            <%- include ./login-panel %>

            <%- include ./signup-panel %>

            <%- include ./password-panel %>

        </div>

    </div>
    <script>
        (function(){
            var locale = '<%= language %>';
            var $birthdayField = $('.date');
            var $genderField = $('#gender');

            var $passwordForm = $('#rts-password-form');
            var $loginForm = $('#rts-login-form');
            var $signupForm = $('#rts-signup-form');

            var $loginPanel = $('#rts-login-panel');
            var $signupPanel = $('#rts-signup-panel');
            var $passwordPanel = $('#rts-password-panel');

            var $linkToSignupPage = $('.to-signup-link');
            var $linkToLoginPage = $('.to-login-link');
            var $linkToPasswordPage = $('.to-password-link');

            var $alertsSuccess = $('.alert-message-success');
            var $alertsError = $('.alert-message-error');

            var $facebookLink = $('.facebook');
            var $googleLink = $('.googleplus');

            var $recaptchaBlock = $('#recaptcha-block')

            if($birthdayField.length) {
                $birthdayField.datepicker({
                    format: 'dd/mm/yyyy',
                    language: locale,
                    endDate: "0d"
                });
            }

            if($genderField) {
                $genderField.on("change", function() {
                    $genderField.css("color", "#666");
                });
            }

            if($linkToSignupPage) {
                $linkToSignupPage.on('click', function () {
                    initAlertMessages();
                    $('#signup-block').after($recaptchaBlock);
                    $loginPanel.hide();
                    $signupPanel.show();
                });
            }

            if($linkToLoginPage) {
                $linkToLoginPage.on('click', function () {
                    initAlertMessages();
                    $signupPanel.hide();
                    $passwordPanel.hide();
                    $loginPanel.show();
                });
            }

            if($linkToPasswordPage) {
                $linkToPasswordPage.on('click', function () {
                    initAlertMessages();
                    $('#password-block').after($recaptchaBlock);
                    $loginPanel.hide();
                    $passwordPanel.show();
                });
            }

            if($facebookLink) {
                $facebookLink.on('click', function() {
                    FB.login(function (response) {
                        if (response.authResponse) {
                            facebookSignup(response);
                        } else {
                            console.log('Erreur de connexion à Facebook', response);
                        }
                    }, {scope: 'public_profile,email'});
                })
            }

            if($passwordForm) {
                $passwordForm.submit(function (e) {
                    e.preventDefault();

                    initAlertMessages();

                    $(this).ajaxSubmit({
                        error: function (result) {
                            if (result.responseJSON.errors) {
                                $.each(result.responseJSON.errors, function (index, error) {
                                    $alertsError.append($('<p>').text(error.msg));
                                });
                            } else if (!result.responseJSON.msg) {
                                $alertsError.append($('<p>').text("<%= __('PASSWORD_RECOVERY_JS_ERROR_MSG') %>"));
                            } else {
                                $alertsError.append($('<p>').text(result.responseJSON.msg));
                            }
                            grecaptcha.reset();
                            $alertsError.show();
                        },
                        success: function () {
                            $passwordPanel.hide();
                            $loginPanel.show();
                            $alertsSuccess.text("<%= __('PASSWORD_RECOVERY_JS_SUCCESS_MSG') %>");
                            $alertsSuccess.show();
                        }
                    });
                });
            }

            if($loginForm) {
                $loginForm.submit(function (e) {
                    e.preventDefault();
                    initAlertMessages();
                    authenticate($('input[name=login-email]').val(), $('input[name=login-password]').val())
                })
            }

            if($signupForm) {
                $signupForm.submit(function (e) {
                    e.preventDefault();
                    initAlertMessages();

                    $(this).ajaxSubmit({
                        error: function (error) {
                            if (error.responseJSON.errors) {
                                $.each(error.responseJSON.errors, function (index, error) {
                                    $alertsError.append($('<p>').html(error.msg));
                                });
                            } else if (!error.responseJSON.msg) {
                                $alertsError.append($('<p>').html("<%= __('PASSWORD_RECOVERY_JS_ERROR_MSG') %>"));
                            } else {
                                $alertsError.append($('<p>').text(error.responseJSON.msg));
                            }
                            grecaptcha.reset();
                            $("html, body").animate({ scrollTop: 0 });
                            $alertsError.show();
                        },
                        success: function (result) {
                            authenticate($('#signup-email').val(), $('#confirm_password').val())
                        }
                    });
                })
            }

            function initAlertMessages() {
                $alertsSuccess.hide();
                $alertsSuccess.empty();
                $alertsError.hide();
                $alertsError.empty();
            }

            function facebookSignup(facebookResponse) {
                $.ajax({
                    url: "<%= link('/oauth/facebook/signup') %>",
                    data: {
                        fbToken: facebookResponse.authResponse.accessToken,
                        client_id: "<%= client_id %>"
                    },
                    type: 'POST',
                    success: function (result) {
                        console.log("FACEBOOK SIGNUP SUCCESS", result);
                    },
                    error: function (error) {
                        console.log("FACEBOOK SIGNUP ERROR", error);
                    }
                });
            }

            function authenticate(email, password) {
                var formData = {
                    grant_type: 'password',
                    username: email,
                    password: password,
                    client_id: "<%= client_id %>"
                };

                $.ajax({
                    type        : 'POST',
                    url         : '<%= link('/oauth2/login') %>',
                    data        : formData,
                    dataType    : 'json',
                    encode          : true,
                    success: function (result) {
                        requestSession(result.access_token);
                    },
                    error: function (error) {
                        if(error.responseJSON.msg) {
                            $alertsError.append($('<p>').text(error.responseJSON.msg));
                        } else if(error.responseJSON.error_description) {
                            if(error.responseJSON.error_description === "Missing required parameter: username") {
                                $alertsError.append($('<p>').html("Un email valide doit être renseigné"));
                            }
                            if(error.responseJSON.error_description === "Missing required parameter: password") {
                                $alertsError.append($('<p>').html("Un mot de passe valide doit être renseigné"));
                            }
                            if(error.responseJSON.error_description === "INCORRECT_LOGIN_OR_PASS") {
                                $alertsError.append($('<p>').html("Nom d'utilisateur ou mot de passe inconnu"));
                            }
                        }
                        $alertsError.show();
                    }
                })
            }

            function requestSession(token) {
                $.ajax({
                    url: "<%= link('/oauth2/session/cookie/request') %>",
                    data: {
                        token: token
                    },
                    type: 'POST',
                    success: function () {
                        //redirect to oAuth screen
                        window.location.replace("<%- auth_origin%>");
                    },
                    error: function (error) {
                    }
                });
            }

            var initGoogle = function() {
                gapi.load('auth2', function(){
                    // Retrieve the singleton for the GoogleAuth library and set up the client.
                    auth2 = gapi.auth2.init({
                        client_id: '<%= config.identity_providers.google.client_id %>',
                        cookiepolicy: 'single_host_origin'
                        // Request scopes in addition to 'profile' and 'email'
                        //scope: 'additional_scope'
                    });
                    attachSignin(document.getElementById('google-btn'));
                });
            }

            function attachSignin(element) {
                auth2.attachClickHandler(element, {},
                    function(googleUser) {
                        if(googleUser) {
                            googleSignup(googleUser);
                        } else {
                            console.log('Erreur de connexion à Google', data);
                        }
                    }, function(error) {
                        console.log("Google signup error", JSON.stringify(error, undefined, 2));
                    });
            }

            function googleSignup(googleUser) {
                var id_token = googleUser.getAuthResponse().id_token;

                $.ajax({
                    url: "<%= link('/oauth/google/signup') %>",
                    data: {
                        idToken: id_token,
                        client_id: "<%= client_id %>"
                    },
                    type: 'POST',
                    success: function (result) {
                        console.log("GOOGLE SIGNUP SUCCESS", result);
                    },
                    error: function (error) {
                        if (error.responseJSON.error) {
                            $alertsError.append($('<p>').text(error.responseJSON.error));
                            $alertsError.show();
                        } else {
                            console.log("GOOGLE SIGNUP ERROR", error);
                        }
                    }
                });
            }

            initGoogle();

        })();
    </script>

    <% include ../../util/password-support %>

    </div>

</main>

</body>

</html>