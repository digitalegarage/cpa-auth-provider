{
	"info": {
		"_postman_id": "2b910d20-cec2-42a8-8d19-6df04844d90a",
		"name": "CPA Workflow",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0489b996-5c73-4036-b793-ac90ca839e15",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"client_id\",jsonData.client_id);",
							"postman.setEnvironmentVariable(\"client_secret\",jsonData.client_secret);     "
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3e4e0fd7-1dba-45ee-87a3-975f1201ab79",
						"exec": [
							"pm.globals.set(\"idp_port\", \"3000\"); // use \"80\" or \"443\" when needed!",
							"pm.globals.set(\"idp_host\", \"localhost\");",
							"pm.globals.set(\"idp_prefix\", \"\"); // \"idp/\"",
							"pm.globals.set(\"idp_proto\", \"http\");",
							"pm.globals.set(\"cpa_domain\", \"cpa.rts.ch\");",
							"pm.globals.set(\"login_user\",\"ibis@br.de\");",
							"pm.globals.set(\"login_pass\", \"peter123\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"software_id\": \"cpa-test-client\",\n  \"software_version\": \"1.0.0\",\n  \"client_name\": \"My demo test device v1\"\n}"
				},
				"url": {
					"raw": "{{idp_proto}}://{{idp_host}}:{{idp_port}}/{{idp_prefix}}register",
					"protocol": "{{idp_proto}}",
					"host": [
						"{{idp_host}}"
					],
					"port": "{{idp_port}}",
					"path": [
						"{{idp_prefix}}register"
					]
				},
				"description": "Device starts a register process by sending a few information about itself\n"
			},
			"response": []
		},
		{
			"name": "Associate",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5dfca31c-1b21-4565-9bf7-0146d582dd08",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"device_code\",jsonData.device_code);",
							"postman.setEnvironmentVariable(\"user_code\",jsonData.user_code);",
							"postman.setEnvironmentVariable(\"verification_uri\",jsonData.verification_uri);",
							"postman.setEnvironmentVariable(\"sid\",postman.getResponseCookie(\"identity.provider.sid\").value);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"client_id\": \"{{client_id}}\",\n\t\"client_secret\": \"{{client_secret}}\",\n\t\"domain\": \"{{cpa_domain}}\"\n}"
				},
				"url": {
					"raw": "{{idp_proto}}://{{idp_host}}:{{idp_port}}/{{idp_prefix}}associate",
					"protocol": "{{idp_proto}}",
					"host": [
						"{{idp_host}}"
					],
					"port": "{{idp_port}}",
					"path": [
						"{{idp_prefix}}associate"
					]
				},
				"description": "Device starts a register process by sending a few information about itself\n"
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dbfe6470-2686-4a3d-911f-457b81e2fe0c",
						"exec": [
							"console.log(postman.getEnvironmentVariable(\"sid\"));",
							"postman.setEnvironmentVariable(\"sid\",postman.getResponseCookie(\"identity.provider.sid\").value);",
							"console.log(postman.getEnvironmentVariable(\"sid\"));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "identity.provider.sid={{sid}}"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "email",
							"value": "{{login_user}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{login_pass}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{idp_proto}}://{{idp_host}}:{{idp_port}}/{{idp_prefix}}login?redirect=/user/profile",
					"protocol": "{{idp_proto}}",
					"host": [
						"{{idp_host}}"
					],
					"port": "{{idp_port}}",
					"path": [
						"{{idp_prefix}}login"
					],
					"query": [
						{
							"key": "redirect",
							"value": "/user/profile"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Cookie",
						"value": "identity.provider.sid={{sid}}"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "verification_type",
							"value": "user_code",
							"type": "text"
						},
						{
							"key": "user_code",
							"value": "{{user_code}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{verification_uri}}",
					"host": [
						"{{verification_uri}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Poll",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9aa41bd7-836d-44b0-aa9f-d914e33b3449",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "identity.provider.sid={{sid}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"client_id\": \"{{client_id}}\",\n\t\"domain\": \"cpa.rts.ch\",\n\t\"device_code\": \"{{device_code}}\",\n\t\"client_secret\": \"{{client_secret}}\",\n\t\"grant_type\": \"http://tech.ebu.ch/cpa/1.0/device_code\"\n}"
				},
				"url": {
					"raw": "{{idp_proto}}://{{idp_host}}:{{idp_port}}/{{idp_prefix}}token",
					"protocol": "{{idp_proto}}",
					"host": [
						"{{idp_host}}"
					],
					"port": "{{idp_port}}",
					"path": [
						"{{idp_prefix}}token"
					]
				},
				"description": "Device starts a register process by sending a few information about itself\n"
			},
			"response": []
		}
	]
}