#!/usr/bin/env node

"use strict";

/**
 * Usage: $ bin/generate-data --nb=<number of account to generate if not present default value is 100>
 */

var faker = require('faker');
var db = require('../models');

var NB = '--nb=';
var ADMIN_PASS = '--password=';

var nbOfUserToGenerate = 100;
var adminPass = '';

for (var i in process.argv) {
    if (process.argv[i].startsWith(NB)) {
        nbOfUserToGenerate = process.argv[i].slice(NB.length);
    }
    if (process.argv[i].startsWith(ADMIN_PASS)) {
        adminPass = process.argv[i].slice(ADMIN_PASS.length);
    }
}

var batch = [];


for (var i = 0; i < nbOfUserToGenerate; i++) {
    batch.push(db.User.create({
        email: faker.internet.email(),
        verified: faker.random.number(1),
        password_changed_at: faker.date.past(10).getTime(),
        last_login_at: faker.date.past(10).getTime()
    }).then(generatePasswordAndProfile));
}

Promise.all(batch).then(function () {
    // Create an admin if a password had been provided:
    if (adminPass !== '') {
        batch.push(db.User.findOrCreate({
            where: {
                    email: 'peach-review@ebu.io'
            },
            default: {
                verified: true,
                password_changed_at: faker.date.past(10).getTime(),
                last_login_at: faker.date.past(10).getTime(),
                // permission_id: 1
            }
        }).spread(function (user) {
            return user.updateAttributes({permission_id: 1}).then(function () {
                return user.setPassword(adminPass);
            });
        }));
    }
});


function generateProfile(user) {
    return db.UserProfile.create({
        firstname: faker.name.firstName(),
        lastname: faker.name.lastName(),
        gender: faker.random.number(1) ? 'male' : 'female',
        date_of_birth: faker.date.past(80).getTime(),
        language: 'fr',
        user_id: user.id
    });
}

function generatePasswordAndProfile(user) {
    return user.setPassword(faker.internet.password()).then(function () {
        return generateProfile(user);
    });
}
